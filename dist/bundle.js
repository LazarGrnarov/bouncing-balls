!function(t){var i={};function e(n){if(i[n])return i[n].exports;var s=i[n]={i:n,l:!1,exports:{}};return t[n].call(s.exports,s,s.exports,e),s.l=!0,s.exports}e.m=t,e.c=i,e.d=function(t,i,n){e.o(t,i)||Object.defineProperty(t,i,{enumerable:!0,get:n})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,i){if(1&i&&(t=e(t)),8&i)return t;if(4&i&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(e.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&i&&"string"!=typeof t)for(var s in t)e.d(n,s,function(i){return t[i]}.bind(null,s));return n},e.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(i,"a",i),i},e.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},e.p="",e(e.s=1)}([function(t,i,e){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var n=function(){function t(){}return t.hypot=function(t,i){return Math.sqrt(t*t+i*i)},t.generateSign=function(){return Math.random()>.5?1:-1},t.randomRange=function(t,i,e,n){void 0===e&&(e=!1),void 0===n&&(n=!1);var s=Math.random()*(i-t)+t;return e&&(s|=0),s*(n?1:this.generateSign())},t.randomChoice=function(t){return t[Math.floor(Math.random()*t.length)]},t}();i.Utils=n},function(t,i,e){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var n=e(2);console.log("This is a browser feature intended for developers. If someone told you to copy-paste something here to enable a feature or 'hack' someone's account, it is a scam and will give them access to your computer.");new n.Draw(100,2,10)},function(t,i,e){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var n=e(3),s=e(0),o=function(){function t(t,i,e){var s=this;void 0===t&&(t=100),void 0===i&&(i=1),void 0===e&&(e=10),this.canvas=document.getElementById("canvas"),this.label=document.getElementById("info"),this.start=null,this.BALL_LIMIT=10,this.STEP=t,this.MIN_BALLS_PER_CLICK=i,this.MAX_BALLS_PER_CLICK=e,this.BALL_LIMIT=this.canvas.width*this.canvas.height*.3/(10*Math.PI*2)|0,this.label=document.getElementById("info"),this.toggleButton=document.getElementById("toggle"),this.restartButton=document.getElementById("restart"),this.canvas=document.getElementById("canvas"),this.ctx=this.canvas.getContext("2d");var o=this.canvas.getBoundingClientRect();this.CANVAS_TOP=o.top,this.CANVAS_LEFT=o.left,this.ctx.canvas.width=window.innerWidth,this.ctx.canvas.height=window.innerHeight;var r=new n.Point(this.ctx.canvas.width,this.ctx.canvas.height);window.addEventListener("resize",this.resizeWindow.bind(this)),this.toggleButton.addEventListener("click",this.toggle.bind(this)),this.restartButton.addEventListener("click",this.restart.bind(this)),this.canvas.addEventListener("click",(function(t){s.main(new n.Point(t.clientX-s.CANVAS_LEFT,t.clientY-s.CANVAS_TOP))})),this.service=new n.BouncyService([],r)}return t.prototype.restart=function(){var t=this;this.service.running=!1,this.service.items=[],window.setTimeout((function(){window.cancelAnimationFrame(t.raf)}),16)},t.prototype.main=function(t){var i=this;if(this.service.items.length>this.BALL_LIMIT)return this.label.removeAttribute("hidden"),void window.setTimeout((function(){i.label.setAttribute("hidden","true")}),1500);for(var e=s.Utils.randomRange(this.MIN_BALLS_PER_CLICK,this.MAX_BALLS_PER_CLICK,!0,!0);e>0;){this.service.running&&(window.cancelAnimationFrame(this.raf),this.service.running=!1);new n.Ball(new n.Point(t.X,t.Y),this.service.items.length,this.service);e--}this.service.running||(this.raf=window.requestAnimationFrame((function(t){return i.draw(t)})),this.service.running=!0)},t.prototype.draw=function(t){var i=this;this.start||(this.start=t),this.ctx.clearRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height),this.service.items.forEach((function(t){t.move(t.deltaX,t.deltaY),i.drawBall(t)})),t-this.start>this.STEP&&(this.start=t,this.service.attenuate()),this.raf=window.requestAnimationFrame((function(t){return i.draw(t)}))},t.prototype.drawBall=function(t){var i=this.ctx;i.beginPath(),i.arc(t.coordinates.X,t.coordinates.Y,t.radius,0,2*Math.PI,!0),i.closePath(),i.fillStyle=t.color,i.fill()},t.prototype.toggle=function(){var t=this;this.service.running?(window.cancelAnimationFrame(this.raf),this.service.running=!1,this.toggleButton.textContent="resume"):(this.raf=window.requestAnimationFrame((function(i){return t.draw(i)})),this.service.running=!0,this.toggleButton.textContent="pause")},t.prototype.resizeWindow=function(){var t=this,i=this.canvas.getBoundingClientRect();this.CANVAS_TOP=i.top,this.CANVAS_LEFT=i.left,this.ctx.canvas.width=window.innerWidth,this.ctx.canvas.height=window.innerHeight,this.service.setBoudary(new n.Point(this.ctx.canvas.width,this.ctx.canvas.height)),this.service.items.filter((function(t){return t.noclip})).forEach((function(i){i.coordinates.Y=t.ctx.canvas.height-i.radius})),this.BALL_LIMIT=this.canvas.width*this.canvas.height*.3/(10*Math.PI*2)|0},t}();i.Draw=o},function(t,i,e){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var n=e(0),s=["blue","green","red","yellow","rgba(231, 84, 128, 1)"],o=function(){function t(t,i){this.X=t,this.Y=i}return t.prototype.distance=function(t){var i=this.X-t.X,e=this.Y-t.Y;return n.Utils.hypot(i,e)},t}();i.Point=o;var r=function(){function t(t,i,e,o,r,a,h,c){this.noclip=!1,this.coordinates=t,this.deltaX=void 0!==o?o:n.Utils.randomRange(5,10),this.deltaY=void 0!==r?r:n.Utils.randomRange(1,3),this.radius=void 0!==a?a:n.Utils.randomRange(5,15,!0,!0),this.color=void 0!==h?h:n.Utils.randomChoice(s),this.handler=e,this.handler.items.push(this),this.id=i,this.immunity=void 0!==c?c:10}return t.prototype.isCollision=function(t){return this.coordinates.distance(t.coordinates)<this.radius+t.radius},t.prototype.move=function(t,i,e){void 0===e&&(e=0);var n=void 0!==t?t:this.deltaX,s=void 0!==i?i:this.deltaY,o=this.handler.boundary;return e>20?this:(0==this.deltaY&&(s=0),void 0!==o?((this.coordinates.Y+this.radius+s>o.Y&&s>0||this.coordinates.Y-this.radius-s<0&&s<0)&&(this.deltaY=-this.deltaY,Math.abs(this.deltaY)<.5&&this.coordinates.Y+this.radius+s>o.Y&&(this.coordinates.Y=o.Y-this.radius,this.deltaY=0)),(this.coordinates.X+this.radius+n>o.X&&n>0||this.coordinates.X-this.radius-Math.abs(n)<0&&n<0)&&(this.deltaX=-this.deltaX),this.coordinates.X+=n,this.coordinates.Y+=s,this.coordinates.X=Math.max(Math.min(this.coordinates.X,o.X-this.radius),this.radius),this.coordinates.Y=Math.max(Math.min(this.coordinates.Y,o.Y-this.radius),this.radius),this.cleanup(),this.handler.handleCollision(this,e+1),this):(this.coordinates.X+=n,void(this.coordinates.Y+=s)))},t.prototype.cleanup=function(){Math.abs(this.deltaX)<.1&&(this.deltaX=0),0==this.deltaX&&0==this.deltaY&&(this.noclip=!0,this.color="rgba(255, 127, 80, 0.3)")},t}();i.Ball=r;var a=function(){function t(t,i){this.items=[],this.running=!1,this.items=t,i&&(this.boundary=i)}return t.prototype.setBoudary=function(t){this.boundary=t},t.prototype.findCollisonPossibleSet=function(){return this.items.filter((function(t){return t.immunity<=0&&!t.noclip}))},t.prototype.findAllCollisionItemsForItem=function(t){return this.findCollisonPossibleSet().filter((function(i){return i.id!=t.id&&t.isCollision(i)}))},t.prototype.handleCollision=function(t,i){var e=!1;this.findAllCollisionItemsForItem(t).forEach((function(n){e=!0,n.move(t.deltaX,t.deltaY,i)})),e&&(t.deltaX=-t.deltaX,t.deltaY=-t.deltaY)},t.prototype.attenuate=function(){this.items.filter((function(t){return 0!=t.deltaY||0!=t.deltaX})).forEach((function(t){t.immunity&&t.immunity>0&&(t.immunity-=1),t.deltaY*=.99,0!=t.deltaY&&(t.deltaY+=.25),t.deltaX*=0!=t.deltaY?.99:.5}))},t}();i.BouncyService=a}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,